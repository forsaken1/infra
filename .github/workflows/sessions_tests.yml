name: Sessions service integration tests

on: [push]

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sessions_development
        options: >-
          --health-cmd="pg_isready -U postgres -d sessions_development"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Run Kafka KRaft Broker
        uses: spicyparrot/kafka-kraft-action@v1.1.0
        with:
          kafka-version: "3.6.1"
          kafka-topics: "users,1"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: '1.17'
          otp-version: '27.0'

      - name: Install dependencies
        run: |
          cd sessions.ex
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Wait for services
        run: |
          echo "Waiting for Postgres..."
          until pg_isready -h localhost -p 5432 -U postgres; do
            sleep 1
          done
          echo "Waiting for Kafka..."
          until nc -z localhost 9092; do
            sleep 1
          done

      - name: Prepare database
        env:
          MIX_ENV: test
        run: |
          cd sessions.ex
          mix ecto.create
          mix ecto.migrate

      - name: Start server
        run: |
          cd sessions.ex
          nohup mix phx.server &
          sleep 5

      - name: Wait for server to be ready
        run: |
          timeout 10 bash -c 'until echo > /dev/tcp/localhost/4000; do sleep 1; done'

      - name: Install Ruby dependencies
        run: |
          cd sessions.test
          gem install bundler
          bundle install

      - name: Run tests
        run: |
          cd sessions.test
          rspec
